Exercise 2
Consider a circle inscribed in a square. The ratio of their areas (the ratio of the area of the circle to the area of the square) is   ùúã4  . In this six-part exercise, we will find a way to approximate this value.

Exercise 2a
Using the math library, calculate and print the value of  ùúã4 .

What is the value of  ùúã4 ?
Report your answer to 6 decimal places.

#---Answer---
import math
math.pi/4 3use pi attribute from math library

Exercise 2b

Using random.uniform(), create a function rand() that generates a single float between ‚àí1 and 1.

Call rand() once. For us to be able to check your solution, we will use random.seed() to fix the seed value of the random number generator.

We include some sample code to get you started:

import random

random.seed(1) # Fixes the seed of the random number generator.

def rand():
   # define `rand` here!

rand()


#---Answer----

import random
mport random

random.seed(1) # Fixes the seed of the random number generator.

def rand():
   return random.uniform(-1.0,1.0)  #everything is given in question directly

rand()

answer is -0.7312715117751976. 1st this get generated and seed stores this value and shows same value everytime you run.  
Seed function is used to save the state of random function, so that it can generate some random numbers 
on multiple execution of the code on the same machine or on different machines (for a specific seed value). 
Seed value is the previous value number generated by the generator. 
For the first time when there is no previous value, it uses current system time.

Exercise 2c
The distance between two points x and y is the square root of the sum of squared differences along each dimension of x and y. Write a function distance(x, y) that takes two vectors as its input and outputs the distance between them. Use your function to find the distance between  ùë•=(0,0)  and  ùë¶=(1,1) .

What is the distance between x and y?

#---Answer----
General Math formula for distance = sqrt( (y2-x2)^2 + (y1-x1)2)

Same here
x= [0,0] y = [1,1]
dis = math.sqrt((y[0]-x[0])**2 + (y[1]-x[1])**2)
dis

Answer is sqrt of 2 = 1.4142135623730951

Exercise 2d

Write a function in_circle(x, origin) that determines whether a point in a two dimensional plane falls within a unit circle surrounding a given origin.

Your function should return a boolean True if the distance between x and origin is less than 1 and False otherwise.

Use distance(x, y) as defined in Exercise 2c.

Use your function to determine whether the point (1,1) lies within the unit circle centered at (0,0):

def in_circle(x, origin = [0,0]):
   # Define your function here!
Does the point (1,1) lie within the unit circle centered at (0,0)?

#---Answer----
same as above answer
import math 
x = [1,1]
def distance(x,y):
    dis = math.sqrt((y[0]-x[0])**2 + (y[1]-x[1])**2)
    return dis

def in_circle(x, origin = [0,0]):
    return distance(x,origin) < 1
  
print(in_circle( x,[0,0])).
 From the previous answer we have already seen it is 1.414.. which is greater than 1. So the answer is False.
 
Exercise 2e

Create a list inside of R=10000 booleans that determines whether or not a point falls within the unit circle centered at (0,0).
Set the seed to 1 using random.seed(1).
Use the rand function from Exercise 2b to generate R randomly located points.
Use the function in_circle to test whether or not a given pint falls within the unit circle.
Find the proportion of points that fall within the circle by summing all True values in the inside list; then divide the answer by R to obtain a proportion.
Print your answer. This proportion is an estimate of the ratio of the two areas!
What is the proportion of points within the unit circle?

#----Answer----
R= 10000
random.seed(1) #set randome seed to 1
x = [(rand(),rand()) for i in range(R)] #generate random R points 
inside = [in_circle(p) for p in x] #prepare list of all point that fall within the circle
print(sum(inside)/R) #sum of inside/R to get proportion

the answer on running the above code 0.779

Exercise 2d
Calculate the difference between your estimate from Exercise 2e and math.pi / 4. Note: inside and R are defined as in Exercise 2e.
What is the difference between our estimate from 2e and the true value of  ùúã/4 ?

#---Answer---

ùúã/4 - 0.779

print(math.pi/4 - (sum(inside)/R))  #  0.006398163397448253







